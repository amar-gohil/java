import java.util.ArrayList;
import java.util.List;

class Subject {
	List<Observer> list = new ArrayList<Observer>();
	private int state;

	public int getState() {
		return state;
	}

	public void setState(int state) {
		this.state = state;
		notifyAllObservers();
	}

	public void notifyAllObservers() {
		list.stream().forEach(o -> o.update());
	}

	public void attach(Observer observer) {
		list.add(observer);
	}
}

abstract class Observer {
	protected Subject subject;

	public abstract void update();
}

class BinaryObserver extends Observer {

	public BinaryObserver(Subject subject) {
		this.subject = subject;
		this.subject.attach(this);
	}

	@Override
	public void update() {
		System.out.println("Binary String: " + Integer.toBinaryString(subject.getState()));
	}
}

class OctalObserver extends Observer {
	public OctalObserver(Subject subject) {
		this.subject = subject;
		this.subject.attach(this);
	}

	@Override
	public void update() {
		System.out.println("Octal Observer: " + Integer.toOctalString(subject.getState()));
	}

}

public class Observable1 {
	public static void main(String[] args) {
		Subject subject = new Subject();

	      new OctalObserver(subject);
	      new BinaryObserver(subject);

	      System.out.println("First state change: 15");	
	      subject.setState(15);
	      System.out.println("Second state change: 10");	
	      subject.setState(10);
	}
}
